@use '../base/variables/borders';
@use '../base/variables/colors';
@use '../base/variables/dimensions';
@use '../base/variables/shadows';


.editor {
  display: flex;
  flex-direction: column;

  &--standard {
    height: dimensions.$qlEditor;
    max-height: dimensions.$qlEditor;
  }

  .ql-snow {
    &.ql-toolbar {
      border-radius: dimensions.$normalRadius dimensions.$normalRadius 0 0;
  
      button {
        svg, .ql-stroke {
          stroke: colors.$fontDefault;
        }
    
        &:hover, &.ql-active {
          background-color: transparent;
    
          svg, .ql-stroke {
            stroke: colors.$forestGreen;
          }
        }
      }
  
      .ql-picker {
        color: colors.$fontDefault;
  
        &.ql-expanded {
          background-color: rgba(colors.$forestGreen, .2);
        }

        &.ql-size {
          .ql-picker-item[data-value="small"]::before {
            font-size: .75rem;
          }

          .ql-picker-item::before {
            font-size: 1rem;
          }

          .ql-picker-item[data-value="large"]::before {
            font-size: 1.5rem;
          }

          .ql-picker-item[data-value="huge"]::before {
            font-size: 2rem;
          }
        }
  
        &-label {
          border: 0;
  
          .ql-stroke {
            stroke: colors.$fontDefault;
          }
  
          &.ql-active, &:hover {
            background-color: transparent;
            color: colors.$forestGreen;
  
            .ql-stroke {
              stroke: colors.$forestGreen;
            }
          }
        }
  
        &-options {
          background-color: colors.$darkGrayAccent;
          border: 0;
          box-shadow: shadows.$strongerShadow;
  
          .ql-selected {
            background-color: transparent;
            color: colors.$forestGreen;
  
            .ql-stroke {
              stroke: colors.$forestGreen;
            }
          }
        }
  
        &-item {
          &:hover {
            background-color: transparent;
            color: colors.$forestGreen;
          }
        }
      }
    }
    
    &.ql-container {
      border-radius: 0 0 dimensions.$normalRadius dimensions.$normalRadius;
      height: calc(dimensions.$authenthicationWidth / 2);
      max-height: calc(dimensions.$authenthicationWidth / 2);
      padding: dimensions.$smallSpacing;
  
      .ql-tooltip {
        background-color: colors.$darkGrayAccent;
        border: borders.$darkishGray;
        box-shadow: none;
        color: colors.$fontDefault;
        left: 0;
  
        input {
          background-color: transparent;
          color: colors.$fontDefault;
        }
  
        a {
          color: colors.$forestGreen;
        }
      }

      .ql-editor {
        padding: 0;

        .ql-size {
          &-small {
            font-size: .75rem;
          }

          &-large {
            font-size: 1.5rem;
          }

          &-huge {
            font-size: 2rem;
          }
        }

        p, blockquote, ul {
          font-size: 1rem;
        }

        a {
          color: colors.$forestGreen;
        }

        blockquote {
          background-color: colors.$darkGrayAccentLight;
          border-left: dimensions.$normalRadius solid colors.$forestGreen;
          padding: 0 1rem;
          margin: 0;
        }

        &::before {
          color: rgba(colors.$fontDefault, .4);
          font-style: normal;
        }
      }
    }
  }
}